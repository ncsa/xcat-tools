#!/bin/bash

###
# Description: Configure Puppet agent
# 1. Install puppet-agent
#     1. Check if puppet agent is present: yes = stop
#     2. Check if puppet repo is configured: yes = install puppet-agent
#     3. Check if puppet repo available in /install/postscripts/repos
#     4. Check if puppet-agent rpm is available in /install/postscripts/custom/rpms
# 2. Re-install, if exist, pre-existing puppet SSL certs
# Note: Puppet agent service is started/enabled via puppet_run.
#       Some use cases require puppet run to happen at a later time.
#
# Usage:
#      1. use $PUPPETMASTER or $MASTER as the puppet server
#         updatenode <noderange> -P "custom/puppet_configure"
#
# Source: https://github.com/ncsa/xcat-tools
###


# PREP
PRG=$( basename $0 )
logger -t xcat -p local4.info "running '$PRG' on node $NODE"


# DEFAULT SETTINGS
PUPPET=/opt/puppetlabs/bin/puppet
BKUP_SSLDIR=/install/files/compute/var/lib/puppet/ssl
CA=ca.pem
REPO_BASEURL=   #set this to explicitly set repo baseurl
REPO_DIR_SEARCH_LOCATIONS=( /xcatpost/repos/puppet )
RPM_SEARCH_LOCATIONS=( /xcatpost/custom/rpms )


# FUNCTIONS
logr() {
  logger -t xcat -p local4.info "$*"
  echo "$*"
}


croak() {
  logr "ERROR - $*"
  echo "ERROR - $*"
  exit 99
}


set_server() {
    server=$MASTER
    [[ -n "$PUPPETMASTER" ]] && server=$PUPPETMASTER
    logr "setting server set to '$server' in local config"
    $PUPPET config set server "$server" --section agent
    logr "verify server setting is saved in local config"
    $PUPPET config print server --section agent
}


restore_certs() {
    logr "copying puppet certs from the master."
    SSLDIR=$( $PUPPET config print ssldir )
    set -x
    for d in certs public_keys private_keys; do
        pemlist=( $( ls $BKUP_SSLDIR/$d/*${NODE}.*.pem ) )
        [[ ${#pemlist[@]} -gt 1 ]] && croak "Multiple PEM files found for this host"
        local _pemfile="${pemlist[0]}"
        if [[ -n "$_pemfile" ]] ; then
            if [[ -f "$_pemfile" ]] ; then
                logr "Found PEM file '$_pemfile'"
                logr "copying cert '$_pemfile'"
                mkdir -p $SSLDIR/$d
                cp "$_pemfile" $SSLDIR/$d/.
            fi
        fi
    done
    logr "copying CA cert '$BKUP_SSLDIR/certs/$CA'"
    mkdir -p $SSLDIR/certs
    cp $BKUP_SSLDIR/certs/$CA $SSLDIR/certs/.
    ls -R $SSLDIR
    set +x
    logr "copying puppet certs from the master ... OK"
}


is_agent_installed() {
    logr "is agent installed"
    [[ -f "$PUPPET" ]]
    local _rc=$?
    [[ $_rc -eq 0 ]] && logr '...yes' || logr '...NO'
    return $_rc
}


is_repo_installed() {
    logr "is repo installed"
    yum repolist | grep 'Puppet \(\w \)\?Repo'
    local _rc=$?
    [[ $_rc -eq 0 ]] && logr '...yes' || logr '...NO'
    return $_rc
}


install_repo() {
    local _rc=1
    local _baseurl="$REPO_BASEURL"
    if [[ -z "$_baseurl" ]] ; then
        # REPO_BASEURL was empty, so try scanning repo dir locations
        for repodir in "${REPO_DIR_SEARCH_LOCATIONS[@]}"; do
            if [[ -f "$repodir"/repodata/repomd.xml ]]; then
                _baseurl="file://$repodir"
                break
            fi
        done
    fi
    if [[ -n "$_baseurl" ]] ; then
        logr "installing puppet repo with baseurl: '$_baseurl'"
        repofile=/etc/yum.repos.d/puppet.repo
        >$repofile echo "[puppet]"
        >>$repofile echo "name=Puppet Repository"
        >>$repofile echo "baseurl=$_baseurl"
        >>$repofile echo "enabled=1"
        >>$repofile echo "gpgcheck=0"
        _rc=0
    fi
    return $_rc
}


install_from_repo() {
    logr "attempting install puppet agent from repo"
    is_repo_installed || install_repo 
    is_repo_installed && yum -y install puppet-agent
}


install_rpm() {
    logr "looking for a puppet-agent rpm to install"
    local _rc=1
    for dir in "${RPM_SEARCH_LOCATIONS[@]}"; do
        rpm=$( find "$dir" -name 'puppet-agent*rpm' -print | sort -V | tail -1 )
        logr "installing puppet-agent rpm from: '$rpm'"
        yum install -y "$rpm"
        _rc=$?
        break
    done
    return $_rc
}


# DO WORK

is_agent_installed || install_from_repo
is_agent_installed || install_rpm
is_agent_installed || croak "Failed to install puppet-agent"

logr "ensure $MASTER:$INSTALLDIR is mounted"
/xcatpost/mountinstall || croak 'mountinstall returned non-zero'
logr "ensure $MASTER:$INSTALLDIR is mounted ... OK"

restore_certs

set_server

logr "end of puppet_configure on OS '$OSVER' on node '$NODE'"

exit 0
