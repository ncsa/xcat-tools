#!/bin/bash

###
# Description: Configure Puppet agent
#   0. Assume appropriate yum repos are already configured
#   1. Install puppet-agent RPM
#   2. Re-install, if exist, pre-existing puppet SSL certs
# Note: Puppet agent service is started/enabled via puppet_run
#
# Usage:
#      1. use $PUPPETMASTER or $MASTER as the puppet server
#            updatenode <noderange> -P "custom/puppet_configure" [CUSTOM_ENVIRONMENT_WHEN_NO_ENC]
#
# Source: https://github.com/ncsa/xcat-tools
###

#
# PREP
#
PRG=$( basename $0 )
logger -t xcat -p local4.info "running '$PRG' on node $NODE"


#
# DEFAULT SETTINGS
#
PUPPET=/opt/puppetlabs/bin/puppet
BKUP_SSLDIR=/install/files/compute/var/lib/puppet/ssl
CA=ca.pem


#
# FUNCTIONS
#
logr() {
  logger -t xcat -p local4.info "$*"
  echo "$*"
}


croak() {
  logr "ERROR - $*"
  echo "ERROR - $*"
  exit 99
}


set_server() {
    server=$MASTER
    [[ -n "$PUPPETMASTER" ]] && server=$PUPPETMASTER
    logr "setting server set to '$server' in local config"
    $PUPPET config set server "$server" --section agent
    logr "verify server setting is saved in local config"
    $PUPPET config print server --section agent
}


restore_certs() {
    logr "copying puppet certs from the master."
    SSLDIR=$( $PUPPET config print ssldir )
    set -x
    for d in certs public_keys private_keys; do
        pemlist=( $( ls $BKUP_SSLDIR/$d/*${NODE}.*.pem ) )
        [[ ${#pemlist[@]} -gt 1 ]] && croak "Multiple PEM files found for this host"
        local _pemfile="${pemlist[0]}"
        if [[ -n "$_pemfile" ]] ; then
            if [[ -f "$_pemfile" ]] ; then
                logr "Found PEM file '$_pemfile'"
                logr "copying cert '$_pemfile'"
                mkdir -p $SSLDIR/$d
                cp "$_pemfile" $SSLDIR/$d/.
            fi
        fi
    done
    logr "copying CA cert '$BKUP_SSLDIR/certs/$CA'"
    mkdir -p $SSLDIR/certs
    cp $BKUP_SSLDIR/certs/$CA $SSLDIR/certs/.
    ls -R $SSLDIR
    set +x
    logr "copying puppet certs from the master ... OK"
}


#
# DO WORK
#

# Allow for custom environment to be specified on cmdline
# (this won't do anything if using ENC at your site)
[[ $# -gt 0 ]] && {
    REQUESTED_ENV="$1"
    shift
}

logr "install puppet-agent RPM via Yum"
yum -y install puppet-agent
logr "install puppet-agent RPM via Yum ... OK"

logr "ensure $MASTER:$INSTALLDIR is mounted"
/xcatpost/mountinstall || croak 'mountinstall returned non-zero'
logr "ensure $MASTER:$INSTALLDIR is mounted ... OK"

restore_certs

# TODO: this should be optional to allow for default hostname 'puppet' to be
# used if DNS is configured properly.
set_server

logr "end of puppet_configure on OS '$OSVER' on node '$NODE'"

exit 0
