#!/bin/bash

function die() {
    [[ "$_debug" -eq 1 ]] && set -x
    echo "ERROR: $*" 1>&2
    exit 99
}


function ask_yes_no() {
    local rv=1
    local msg="Is this ok?"
    [[ -n "$1" ]] && msg="$1"
    echo "$msg"
    select yn in "Yes" "No"; do
        case $yn in
            Yes) rv=0;;
            No ) rv=1;;
        esac
        break
    done
    return $rv
}


function get_machine_type {
    [[ "$_debug" -eq 1 ]] && set -x
    local mt=$( rinv $1 \
    | awk '/System Model/ {split($NF,parts,/[^0-9]/); print parts[1] }' )
    [[ ${#mt} -ne 4 ]] && die "Unknown machine type format '$mt', expected length 4"
    echo "$mt"
}


function copy_to_remote() {
    # Copy files to remote systems
    # PARAMS
    #   source filename (Required)
    #   target node     (Required)
    #   remote_path     (Optional)
    #                   remote_path must be full path to remote filename
    #                   If not specified, will be installed to /root/source_filename
    [[ "$_debug" -eq 1 ]] && set -x
    [[ $# -lt 2 ]] && die "function copy_to_remote expected 2 or more parameters, got only '$#'"
    local srcfn="$1"
    local tgtnode="$2"
    local tgtfn="/root/$( basename $srcfn )"
    [[ $# -gt 2 ]] && tgtfn="$3"
    local remote_dir=$( dirname "$tgtfn" )
    /opt/xcat/bin/xdsh "$tgtnode" -t 60  "mkdir -p $remote_dir" | /opt/xcat/bin/xdshbak -c
    /opt/xcat/bin/xdcp "$tgtnode" -t 300 "$srcfn" "$tgtfn"
}
